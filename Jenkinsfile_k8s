properties([buildDiscarder(logRotator(daysToKeepStr: '15'))])

parallel(
  failFast: false,
  'maven-jdk8-nanoserver': {
    buildDockerAndPublishImage('inbound-agent-maven:jdk8-nanoserver', [
      dockerfile: 'maven/jdk8/Dockerfile.nanoserver',
      agentLabels: 'docker-windows-2019 && amd64',
      targetplatforms: 'windows/amd64',
      imageDir: 'maven/jdk8',
    ])
  },
  'maven-jdk11-nanoserver': {
    buildDockerAndPublishImage('inbound-agent-maven:jdk11-nanoserver', [
      dockerfile: 'maven/jdk11/Dockerfile.nanoserver',
      agentLabels: 'docker-windows-2019 && amd64',
      targetplatforms: 'windows/amd64',
    ])
  },
  'maven-jdk17-nanoserver': {
    buildDockerAndPublishImage('inbound-agent-maven:jdk17-nanoserver', [
      dockerfile: 'maven/jdk17/Dockerfile.nanoserver',
      agentLabels: 'docker-windows-2019 && amd64',
      targetplatforms: 'windows/amd64',
      imageDir: 'maven/jdk17',
    ])
  },
  'maven-jdk21-nanoserver': {
    buildDockerAndPublishImage('inbound-agent-maven:jdk21-nanoserver', [
      dockerfile: 'maven/jdk21/Dockerfile.nanoserver',
      agentLabels: 'docker-windows-2019 && amd64',
      targetplatforms: 'windows/amd64',
      imageDir: 'maven/jdk21',
    ])
  },
  'updatecli': {
    // Test all configs
    updatecli(action: 'diff')
    if (env.BRANCH_IS_PRIMARY) {
      // Execute config daily or weekly depending on their folder
      updatecli(action: 'apply', config: './updatecli/updatecli.d/daily.d', cronTriggerExpression: '@daily')
      updatecli(action: 'apply', config: './updatecli/updatecli.d/weekly.d', cronTriggerExpression: '@weekly')
    }
  },
)
